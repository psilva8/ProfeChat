{"version":3,"file":"app/api/activities/generate/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./src/app/api/activities/generate/route.ts","webpack://_N_E/./src/app/api/activities/generate/route.ts?9260","webpack://_N_E/?0c89","webpack://_N_E/./src/lib/auth.ts","webpack://_N_E/./src/lib/db.ts","webpack://_N_E/./src/lib/openai.ts","webpack://_N_E/<anon>"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { NextResponse } from 'next/server';\nimport { auth } from '@/lib/auth';\nimport { openai } from '@/lib/openai';\nimport { db } from '@/lib/db';\n\nexport const runtime = 'edge';\nexport const dynamic = 'force-dynamic';\n\nexport async function POST(req: Request) {\n  try {\n    const session = await auth();\n    if (!session?.user) {\n      return NextResponse.json(\n        { error: 'Unauthorized' },\n        { status: 401 }\n      );\n    }\n\n    const body = await req.json();\n    const { title, grade, subject, type, duration, objectives, materials } = body;\n\n    if (!title || !grade || !subject || !type || !duration || !objectives || !materials) {\n      return NextResponse.json(\n        { error: 'Missing required fields' },\n        { status: 400 }\n      );\n    }\n\n    const prompt = `Por favor, genera una actividad educativa detallada con las siguientes características:\n\nTítulo: ${title}\nGrado: ${grade}° de primaria\nAsignatura: ${subject}\nTipo de actividad: ${type}\nDuración: ${duration} minutos\nObjetivos de aprendizaje: ${objectives}\nMateriales necesarios: ${materials.join(', ')}\n\nLa actividad debe incluir:\n1. Descripción general\n2. Paso a paso detallado\n3. Sugerencias de adaptación\n4. Criterios de evaluación\n5. Extensiones o variaciones\n\nFormato de respuesta:\n{\n  \"activity\": {\n    \"description\": \"Descripción general de la actividad\",\n    \"steps\": [\n      {\n        \"order\": 1,\n        \"description\": \"Descripción del paso\"\n      }\n    ],\n    \"adaptations\": [\n      \"Sugerencia de adaptación 1\",\n      \"Sugerencia de adaptación 2\"\n    ],\n    \"evaluationCriteria\": [\n      \"Criterio de evaluación 1\",\n      \"Criterio de evaluación 2\"\n    ],\n    \"variations\": [\n      \"Variación o extensión 1\",\n      \"Variación o extensión 2\"\n    ]\n  }\n}`;\n\n    const response = await openai.chat.completions.create({\n      model: 'gpt-3.5-turbo',\n      messages: [\n        {\n          role: 'system',\n          content: 'You are a helpful assistant that generates educational activities.'\n        },\n        {\n          role: 'user',\n          content: prompt\n        }\n      ]\n    });\n\n    if (!response.choices[0].message?.content) {\n      return NextResponse.json(\n        { error: 'Failed to generate activity' },\n        { status: 500 }\n      );\n    }\n\n    // Save the activity to the database\n    const activity = await db.activity.create({\n      data: {\n        userId: session.user.id,\n        title,\n        subject,\n        grade,\n        type,\n        duration,\n        objectives,\n        content: response.choices[0].message.content || '',\n        materials: JSON.stringify(materials),\n      },\n    });\n\n    return NextResponse.json(activity);\n  } catch (error) {\n    console.error('Error generating activity:', error);\n    return NextResponse.json(\n      { error: 'Internal Server Error' },\n      { status: 500 }\n    );\n  }\n} ","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/paulsilva/Documents/demo-02/src/app/api/activities/generate/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/activities/generate/route\",\n        pathname: \"/api/activities/generate\",\n        filename: \"route\",\n        bundlePath: \"app/api/activities/generate/route\"\n    },\n    resolvedPagePath: \"/Users/paulsilva/Documents/demo-02/src/app/api/activities/generate/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/activities/generate/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Factivities%2Fgenerate%2Froute&page=%2Fapi%2Factivities%2Fgenerate%2Froute&pagePath=private-next-app-dir%2Fapi%2Factivities%2Fgenerate%2Froute.ts&appDir=%2FUsers%2Fpaulsilva%2FDocuments%2Fdemo-02%2Fsrc%2Fapp&appPaths=%2Fapi%2Factivities%2Fgenerate%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/activities/generate/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map","import { PrismaAdapter } from \"@auth/prisma-adapter\";\nimport { db } from \"@/lib/db\";\nimport bcrypt from \"bcryptjs\";\nimport NextAuth from \"next-auth\";\nimport type { NextAuthConfig } from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport type { User } from \"@prisma/client\";\n\ndeclare module \"next-auth\" {\n  interface Session {\n    user: {\n      id: string;\n      name?: string | null;\n      email?: string | null;\n      image?: string | null;\n    };\n  }\n}\n\nexport const config = {\n  adapter: PrismaAdapter(db),\n  providers: [\n    CredentialsProvider({\n      name: \"credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"email\" },\n        password: { label: \"Password\", type: \"password\" }\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials?.password) {\n          throw new Error(\"Invalid credentials\");\n        }\n\n        const email = credentials.email as string;\n        const password = credentials.password as string;\n\n        const user = await db.user.findUnique({\n          where: { email }\n        });\n\n        if (!user || !user?.hashedPassword) {\n          throw new Error(\"User not found\");\n        }\n\n        const isCorrectPassword = await bcrypt.compare(\n          password,\n          user.hashedPassword\n        );\n\n        if (!isCorrectPassword) {\n          throw new Error(\"Invalid password\");\n        }\n\n        return {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          image: user.image,\n        };\n      }\n    }),\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    }),\n  ],\n  pages: {\n    signIn: '/auth/login',\n  },\n  session: {\n    strategy: \"jwt\"\n  },\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.id = user.id;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (session.user) {\n        session.user.id = token.id as string;\n      }\n      return session;\n    },\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n} satisfies NextAuthConfig;\n\nexport const { auth, handlers: { GET, POST }, signIn, signOut } = NextAuth(config);\n\nexport async function getCurrentUser() {\n  try {\n    const session = await auth();\n    return session?.user;\n  } catch (error) {\n    console.error('Error getting current user:', error);\n    return null;\n  }\n}","import { PrismaClient } from '@prisma/client';\n\ndeclare global {\n  var cachedPrisma: PrismaClient;\n}\n\nlet prisma: PrismaClient;\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!global.cachedPrisma) {\n    global.cachedPrisma = new PrismaClient();\n  }\n  prisma = global.cachedPrisma;\n}\n\nexport const db = prisma; ","import OpenAI from 'openai';\n\nif (!process.env.OPENAI_API_KEY) {\n  throw new Error('Missing OPENAI_API_KEY environment variable');\n}\n\nexport const openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n}); "],"names":["module","exports","require","runtime","dynamic","POST","req","session","auth","user","NextResponse","json","error","status","title","grade","subject","type","duration","objectives","materials","prompt","join","response","openai","chat","completions","create","model","messages","role","content","choices","message","activity","db","data","userId","id","JSON","stringify","console","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","headerHooks","staticGenerationBailout","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Factivities_2Fgenerate_2Froute_ts_page_2Fapi_2Factivities_2Fgenerate_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGYWN0aXZpdGllcyUyRmdlbmVyYXRlJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhY3Rpdml0aWVzJTJGZ2VuZXJhdGUlMkZyb3V0ZSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFjdGl2aXRpZXMlMkZnZW5lcmF0ZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnBhdWxzaWx2YSUyRkRvY3VtZW50cyUyRmRlbW8tMDIlMkZzcmMlMkZhcHAmYXBwUGF0aHM9JTJGYXBpJTJGYWN0aXZpdGllcyUyRmdlbmVyYXRlJTJGcm91dGUmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0Qh_nextConfigOutput_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap","config","adapter","PrismaAdapter","providers","CredentialsProvider","name","credentials","email","label","password","authorize","findUnique","where","hashedPassword","bcrypt","image","GoogleProvider","clientId","process","env","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","pages","signIn","strategy","callbacks","jwt","token","secret","NEXTAUTH_SECRET","handlers","GET","signOut","NextAuth","PrismaClient","OPENAI_API_KEY","OpenAI","apiKey"],"sourceRoot":""}