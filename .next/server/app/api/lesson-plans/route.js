(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[159],{2067:e=>{"use strict";e.exports=require("node:async_hooks")},6195:e=>{"use strict";e.exports=require("node:buffer")},6171:(e,r,s)=>{"use strict";s.r(r),s.d(r,{ComponentMod:()=>k,default:()=>P});var a={};s.r(a),s.d(a,{GET:()=>w,dynamic:()=>h,runtime:()=>c});var t={};s.r(t),s.d(t,{headerHooks:()=>y,originalPathname:()=>g,patchFetch:()=>I,requestAsyncStorage:()=>m,routeModule:()=>E,serverHooks:()=>v,staticGenerationAsyncStorage:()=>f,staticGenerationBailout:()=>_});var n=s(7875),o=s(8381),i=s(2251),d=s(9845),l=s(572),u=s(3977),p=s(4193);let c="edge",h="force-dynamic";async function w(){try{let e=await (0,u.I8)();if(!e?.user)return l.xk.json({error:"Unauthorized"},{status:401});let r=await p.db.lessonPlan.findMany({where:{userId:e.user.id},orderBy:{createdAt:"desc"}});return l.xk.json(r)}catch(e){return console.error("Error fetching lesson plans:",e),l.xk.json({error:"Internal Server Error"},{status:500})}}let E=new o.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/lesson-plans/route",pathname:"/api/lesson-plans",filename:"route",bundlePath:"app/api/lesson-plans/route"},resolvedPagePath:"/Users/paulsilva/Documents/demo-02/src/app/api/lesson-plans/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:v,headerHooks:y,staticGenerationBailout:_}=E,g="/api/lesson-plans/route";function I(){return(0,d.XH)({serverHooks:v,staticGenerationAsyncStorage:f})}let k=t,P=n.a.wrap(E)},3977:(e,r,s)=>{"use strict";s.d(r,{I8:()=>p});var a=s(5503),t=s(4193),n=s(434),o=s.n(n),i=s(5326),d=s(3013),l=s(1017);let u={adapter:(0,a.N)(t.db),providers:[(0,d.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Invalid credentials");let r=e.email,s=e.password,a=await t.db.user.findUnique({where:{email:r}});if(!a||!a?.hashedPassword)throw Error("User not found");if(!await o().compare(s,a.hashedPassword))throw Error("Invalid password");return{id:a.id,name:a.name,email:a.email,image:a.image}}}),(0,l.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET})],pages:{signIn:"/auth/login"},session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id),e),session:async({session:e,token:r})=>(e.user&&(e.user.id=r.id),e)},secret:process.env.NEXTAUTH_SECRET},{auth:p,handlers:{GET:c,POST:h},signIn:w,signOut:E}=(0,i.ZP)(u)},4193:(e,r,s)=>{"use strict";s.d(r,{db:()=>a});let a=new(s(1715)).PrismaClient}},e=>{var r=r=>e(e.s=r);e.O(0,[569,372],()=>r(6171));var s=e.O();(_ENTRIES="undefined"==typeof _ENTRIES?{}:_ENTRIES)["middleware_app/api/lesson-plans/route"]=s}]);
//# sourceMappingURL=route.js.map