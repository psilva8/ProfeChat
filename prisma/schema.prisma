// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts      Account[]
  sessions      Session[]
  lessonPlans   LessonPlan[]
  rubrics       Rubric[]
  activities    Activity[]
}

model LessonPlan {
  id          String    @id @default(cuid())
  userId      String
  grade       String
  subject     String
  topic       String
  duration    Int
  objectives  String
  content     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Rubric {
  id          String    @id @default(cuid())
  userId      String
  title       String
  subject     String
  grade       String
  criteria    String    // JSON string of criteria and levels
  content     String    // Generated rubric content
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Activity {
  id          String    @id @default(cuid())
  userId      String
  title       String
  subject     String
  grade       String
  type        String    // 'individual', 'group', 'interactive'
  duration    Int
  objectives  String
  content     String    // Generated activity content
  materials   String    // JSON string of required materials
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}
